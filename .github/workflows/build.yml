name: Build and Release Binaries

permissions:
  contents: write

on:
  push:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    name: Build binary for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: runninglog-linux
            asset_name: runninglog-linux
          - os: windows-latest
            artifact_name: runninglog-windows
            asset_name: runninglog-windows.exe
          - os: macos-latest
            artifact_name: runninglog-macos
            asset_name: runninglog-macos
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          pip install pyinstaller

      - name: List current directory contents
        shell: bash
        run: |
          ls -l

      - name: Build runninglog binary with PyInstaller
        run: |
          pyinstaller runninglog.spec

      - name: Build Garmin uploader binary with PyInstaller
        run: |
          pyinstaller --onefile src/uploader/garmin_cli.py --name garmin-uploader

      - name: Create zip archives (Linux/macOS)
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          cd dist
          zip -r ${{ matrix.artifact_name }}.zip runninglog
          zip -r garmin-uploader-${{ matrix.os }}.zip garmin-uploader

      - name: Create zip archives (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          cd dist
          Compress-Archive -Path runninglog.exe -DestinationPath ${{ matrix.artifact_name }}.zip
          Compress-Archive -Path garmin-uploader.exe -DestinationPath garmin-uploader-${{ matrix.os }}.zip

      - name: Upload runninglog binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/${{ matrix.artifact_name }}.zip
          retention-days: 5

      - name: Upload Garmin uploader binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: garmin-uploader-${{ matrix.os }}
          path: dist/garmin-uploader-${{ matrix.os }}.zip
          retention-days: 5

  release:
    name: Release binaries
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-artifacts

      - name: Display structure of downloaded files
        run: ls -R dist-artifacts
      
      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            # RunningLog binaries
            dist-artifacts/runninglog-linux/runninglog-linux.zip
            dist-artifacts/runninglog-windows/runninglog-windows.zip
            dist-artifacts/runninglog-macos/runninglog-macos.zip
            # Garmin uploader binaries
            dist-artifacts/garmin-uploader-ubuntu-latest/garmin-uploader-ubuntu-latest.zip
            dist-artifacts/garmin-uploader-windows-latest/garmin-uploader-windows-latest.zip
            dist-artifacts/garmin-uploader-macos-latest/garmin-uploader-macos-latest.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
